name: 同步上游 + GitHub 到 GitLab
on:
  push:
    branches: [ master, springboot3_sas, springboot3 ]
    tags: [ '*' ]
  workflow_dispatch:  # 支持手动触发
  schedule:
    - cron: '0 16 * * *'  # 每天北京时间凌晨0点运行

jobs:
  sync-upstream-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: 拉取 GitHub fork 代码（完整历史）
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取所有分支和标签
          token: ${{ secrets.GITHUB_TOKEN }}  # 用于推送回fork仓库

      - name: 添加上游仓库远程地址
        run: |
          # 配置上游仓库
          git remote add upstream https://github.com/jeecgboot/JeecgBoot.git
          # 验证远程配置
          git remote -v

      - name: 拉取上游仓库所有分支和标签
        run: |
          # 拉取所有分支
          git fetch upstream '+refs/heads/*:refs/remotes/upstream/*'
          # 拉取所有标签（新增：同步上游标签）
          git fetch upstream --tags
          echo "已获取的上游分支："
          git branch -r | grep upstream
          echo "已获取的上游标签："
          git tag -l  # 显示拉取到的标签

      - name: 同步上游分支到本地fork分支
        run: |
          BRANCHES=("master" "springboot3_sas" "springboot3")
          for BRANCH in "${BRANCHES[@]}"; do
            # 检查上游分支是否存在
            if git show-ref --verify --quiet "refs/remotes/upstream/$BRANCH"; then
              echo "开始同步上游分支 $BRANCH 到本地fork"
              # 切换到fork的对应分支（如果不存在则创建）
              if git show-ref --verify --quiet "refs/heads/$BRANCH"; then
                git checkout $BRANCH
              else
                git checkout -b $BRANCH origin/$BRANCH
              fi
              # 合并上游分支更新（允许快进合并）
              git merge upstream/$BRANCH --ff-only || {
                echo "❌ 合并上游分支 $BRANCH 发生冲突，需要手动解决"
                exit 1
              }
              # 推送到自己的fork仓库
              git push origin $BRANCH
            else
              echo "⚠️ 上游仓库不存在分支 $BRANCH，跳过同步"
            fi
          done

      - name: 同步上游标签到自己的fork仓库（新增步骤）
        run: |
          # 将上游拉取的标签推送到自己的fork仓库
          git push origin --tags || {
            echo "⚠️ 标签推送失败（可能已存在），继续执行后续步骤"
          }

      - name: 拉取所有 GitHub fork 分支和标签（包含刚同步的更新）
        run: |
          git fetch origin '+refs/heads/*:refs/remotes/origin/*'
          git fetch origin --tags  # 拉取fork仓库的标签
          echo "当前的 fork 分支："
          git branch -r
          echo "当前的 fork 标签："
          git tag -l

      - name: 验证目标分支存在
        run: |
          BRANCHES=("master" "springboot3_sas" "springboot3")
          for BRANCH in "${BRANCHES[@]}"; do
            if git show-ref --verify --quiet "refs/remotes/origin/$BRANCH"; then
              echo "✅ 分支 $BRANCH 存在，拉取到本地"
              git checkout -B $BRANCH origin/$BRANCH
            else
              echo "❌ 分支 $BRANCH 不存在，跳过"
              BRANCHES=("${BRANCHES[@]/$BRANCH}")
            fi
          done
          echo "BRANCHES_TO_PUSH=${BRANCHES[*]}" >> $GITHUB_ENV

      - name: 验证 GitLab 凭证
        run: |
          echo "验证用户名：${USER:0:3}***"
          echo "验证令牌前缀：${TOKEN:0:7}***"
        env:
          USER: ${{ secrets.GITLAB_USERNAME }}
          TOKEN: ${{ secrets.GITLAB_TOKEN }}

      - name: 配置 Git 身份
        run: |
          git config --global user.name "${{ secrets.GITLAB_USERNAME }}"
          git config --global user.email "xiaohongjian1989@gmail.com"

      - name: 添加 GitLab 远程地址
        run: |
          GITLAB_URL="https://${{ secrets.GITLAB_USERNAME }}:${{ secrets.GITLAB_TOKEN }}@git.yousen.plus:443/yousen/yousen-framework.git"
          git remote add gitlab "$GITLAB_URL"
          git remote -v

      - name: 推送分支到 GitLab
        run: |
          if [ -n "$BRANCHES_TO_PUSH" ]; then
            echo "推送分支：$BRANCHES_TO_PUSH"
            git push -u gitlab $BRANCHES_TO_PUSH --force
          else
            echo "无分支可推送"
          fi

      - name: 推送标签到 GitLab
        run: |
          if git tag | grep -q .; then
            echo "推送标签：$(git tag -l)"
            git push gitlab --tags --force
          else
            echo "无标签可推送"
          fi
